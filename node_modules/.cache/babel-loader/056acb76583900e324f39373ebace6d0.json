{"ast":null,"code":"var _jsxFileName = \"A:\\\\PORTF\\xD3LIO\\\\ProjetoNodeShopComRestAPI\\\\front-end-react\\\\src\\\\pages\\\\Orders\\\\Orders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react'; // import { connect } from 'react-redux';\n// import CartItemList from '../../components/Cart/CartItemList/CartItemList';\n// import NoProduct from '../../components/Cart/NoProduct/NoProduct';\n\nimport OrderBoard from '../../components/OrderBoard/OrderBoard'; // import OrdersItem from '../../components/OrderBoard/Orders/OrdersItem/OrdersItem';\n// import Spinner from '../../components/UI/Spinner/Spinner';\n// import Wrapper from '../../components/Wrapper/Wrapper';\n// import * as orderActionTypes from '../../store/actions/order';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrdersPage = props => {\n  _s();\n\n  useEffect(() => {//   props.onFetchOrders(props.token, props.userId);\n    //   console.log(props, 'LINEPROPS');\n    //   setTimeout(\n    //     () => {\n    //       props.onFetch(props.token, props.userId);\n    //     },\n    //     500\n    //   )\n  }, []); // let orders = <Spinner></Spinner>;\n  // if (!props.loading && props.orders) {\n  //   console.log(props.orders);\n  //   orders = (\n  //     <Orders>\n  //       {props.orders.map((order) => {\n  //         return (\n  //           <OrdersItem\n  //             orderId={order.id}\n  //             orderProducts={order.products}\n  //           ></OrdersItem>\n  //         );\n  //       })}\n  //     </Orders>\n  //   );\n  // }\n  // if (!props.loading && props.orders === []) {\n  //   orders = (\n  //     <Wrapper>\n  //       <CartItemList>\n  //         <NoProduct>\n  //           <li class=\"no-product cart-item\">\n  //             <h2 style={{ fontFamily: 'Lato' }}>\n  //               You haven't placed any orders yet.\n  //             </h2>\n  //           </li>\n  //         </NoProduct>\n  //       </CartItemList>\n  //     </Wrapper>\n  //   );\n  // }\n\n  return /*#__PURE__*/_jsxDEV(OrderBoard, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n}; // const mapDispatchToProps = (dispatch) => {\n//   return {\n//     onFetch: (token, userId) => {\n//       dispatch(orderActionTypes.asyncFetchOrdersStart(token, userId));\n//     },\n//   };\n// };\n// const mapStateToProps = (state) => {\n//   return {\n//     orders: state.orders.orders,\n//     loading: state.orders.loading,\n//     token: state.auth.token,\n//     userId: state.auth.userId,\n//   };\n// };\n// export default connect(mapStateToProps)(Orders);\n\n\n_s(OrdersPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = OrdersPage;\nexport default OrdersPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersPage\");","map":{"version":3,"names":["React","useEffect","OrderBoard","OrdersPage","props"],"sources":["A:/PORTFÃ“LIO/ProjetoNodeShopComRestAPI/front-end-react/src/pages/Orders/Orders.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\n// import { connect } from 'react-redux';\r\n// import CartItemList from '../../components/Cart/CartItemList/CartItemList';\r\n// import NoProduct from '../../components/Cart/NoProduct/NoProduct';\r\nimport OrderBoard from '../../components/OrderBoard/OrderBoard';\r\n// import OrdersItem from '../../components/OrderBoard/Orders/OrdersItem/OrdersItem';\r\n// import Spinner from '../../components/UI/Spinner/Spinner';\r\n// import Wrapper from '../../components/Wrapper/Wrapper';\r\n\r\n// import * as orderActionTypes from '../../store/actions/order';\r\n\r\nconst OrdersPage = (props) => {\r\n  useEffect(() => {\r\n  //   props.onFetchOrders(props.token, props.userId);\r\n  //   console.log(props, 'LINEPROPS');\r\n  //   setTimeout(\r\n  //     () => {\r\n  //       props.onFetch(props.token, props.userId);\r\n  //     },\r\n\r\n  //     500\r\n  //   )\r\n  }, []);\r\n\r\n  // let orders = <Spinner></Spinner>;\r\n\r\n  // if (!props.loading && props.orders) {\r\n  //   console.log(props.orders);\r\n  //   orders = (\r\n  //     <Orders>\r\n  //       {props.orders.map((order) => {\r\n  //         return (\r\n  //           <OrdersItem\r\n  //             orderId={order.id}\r\n  //             orderProducts={order.products}\r\n  //           ></OrdersItem>\r\n  //         );\r\n  //       })}\r\n  //     </Orders>\r\n  //   );\r\n  // }\r\n\r\n  // if (!props.loading && props.orders === []) {\r\n  //   orders = (\r\n  //     <Wrapper>\r\n  //       <CartItemList>\r\n  //         <NoProduct>\r\n  //           <li class=\"no-product cart-item\">\r\n  //             <h2 style={{ fontFamily: 'Lato' }}>\r\n  //               You haven't placed any orders yet.\r\n  //             </h2>\r\n  //           </li>\r\n  //         </NoProduct>\r\n  //       </CartItemList>\r\n  //     </Wrapper>\r\n  //   );\r\n  // }\r\n\r\n  return <OrderBoard></OrderBoard>\r\n};\r\n\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     onFetch: (token, userId) => {\r\n//       dispatch(orderActionTypes.asyncFetchOrdersStart(token, userId));\r\n//     },\r\n//   };\r\n// };\r\n\r\n\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     orders: state.orders.orders,\r\n//     loading: state.orders.loading,\r\n//     token: state.auth.token,\r\n//     userId: state.auth.userId,\r\n//   };\r\n// };\r\n\r\n\r\n\r\n// export default connect(mapStateToProps)(Orders);\r\n\r\nexport default OrdersPage;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AACA;;AACA,OAAOC,UAAP,MAAuB,wCAAvB,C,CACA;AACA;AACA;AAEA;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAAA;;EAC5BH,SAAS,CAAC,MAAM,CAChB;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;EACC,CAVQ,EAUN,EAVM,CAAT,CAD4B,CAa5B;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBAAO,QAAC,UAAD;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAhDD,C,CAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;GAxEME,U;;KAAAA,U;AA0EN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}