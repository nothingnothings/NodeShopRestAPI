{"ast":null,"code":"var _jsxFileName = \"A:\\\\PORTF\\xD3LIO\\\\ProjetoNodeShopComRestAPI\\\\front-end-react\\\\src\\\\pages\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport { Navigate } from 'react-router-dom';\nimport * as authActionTypes from '../../store/actions/auth';\nimport '../Cart/Cart.css';\nimport './Auth.css';\nimport { connect } from 'react-redux';\nimport { checkValidity, updateObject } from '../../shared/util';\nimport { Spinner } from 'react-bootstrap';\nimport Cart from '../../components/Cart/Cart';\nimport Wrapper from '../../components/Wrapper/Wrapper';\nimport CartItemList from '../../components/Cart/CartItemList/CartItemList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = props => {\n  _s();\n\n  const [isSignup, setIsSignup] = useState(false);\n  const [controls, setControls] = useState({\n    email: {\n      inputType: 'input',\n      elementConfig: {\n        type: 'email',\n        placeholder: 'exemplo@exemplo'\n      },\n      value: '',\n      validation: {\n        required: true,\n        isEmail: true\n      },\n      valid: false,\n      touched: false\n    },\n    password: {\n      inputType: 'input',\n      elementConfig: {\n        type: 'password',\n        placeholder: 'exemplo'\n      },\n      value: '',\n      validation: {\n        required: true\n      },\n      valid: false,\n      touched: false\n    },\n    confirm: {\n      inputType: 'input',\n      elementConfig: {\n        type: 'password',\n        placeholder: 'exemplo'\n      },\n      value: '',\n      validation: {\n        required: true,\n        isEqualToPassword: true\n      },\n      valid: false,\n      touched: false,\n      isNeeded: false\n    }\n  });\n\n  const authSwitchHandler = () => {\n    setIsSignup(!isSignup);\n    const updatedControls = updateObject(controls, {\n      confirm: updateObject(controls.confirm, {\n        isNeeded: !controls.confirm.isNeeded\n      })\n    });\n    setControls(updatedControls);\n    console.log(updatedControls);\n  };\n\n  const inputChangedHandler = (event, inputIdentifier) => {\n    const updatedControls = updateObject(controls, {\n      [inputIdentifier]: updateObject(controls[inputIdentifier], {\n        value: event.target.value,\n        valid: checkValidity(event.target.value, controls[inputIdentifier].validation, controls.password.value),\n        touched: true\n      })\n    });\n    setControls(updatedControls);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    const email = controls.email.value;\n    const password = controls.password.value;\n    const confirmPassword = controls.confirm.value;\n    props.onAuthAttempt(email, password, confirmPassword, isSignup);\n  };\n\n  let errorMessage = false;\n\n  if (props.errorMessage) {\n    errorMessage = props.errorMessage;\n  }\n\n  let controlElementsArray = [];\n\n  for (let key in controls) {\n    controlElementsArray.push({\n      id: key,\n      config: controls[key]\n    });\n  }\n\n  if (!isSignup) {\n    controlElementsArray = controlElementsArray.filter(control => {\n      return control.id !== 'confirm';\n    });\n  }\n\n  let form = !props.loading ? controlElementsArray.map(controlElement => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: controlElement.id,\n        children: [controlElement.id.charAt(0).toUpperCase() + controlElement.id.slice(1), ' ', controlElement.id === 'confirm' ? 'Password' : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        changed: event => {\n          inputChangedHandler(event, controlElement.id);\n        },\n        inputKey: controlElement.id,\n        elementId: controlElement.id,\n        touched: controlElement.config.touched,\n        invalid: !controlElement.config.valid,\n        shouldValidate: controlElement.config.validation,\n        elementType: controlElement.config.inputType,\n        value: controlElement.value,\n        elementConfig: controlElement.config.elementConfig\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, controlElement.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Cart, {\n      children: /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: /*#__PURE__*/_jsxDEV(CartItemList, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-product\",\n            style: {\n              backgroundColor: 'var(--lightest-green)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"no-product cart-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-message user-message--error\",\n                children: errorMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: formSubmitHandler,\n                className: \"login-form\",\n                children: [form, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"switch-link\",\n                  children: !isSignup ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"No Account? \\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n                      buttonClass: \"command\",\n                      clicked: authSwitchHandler,\n                      buttonType: \"button\",\n                      isEnabled: true,\n                      children: \"Join NodeShop\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Already have an account? \\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n                      buttonClass: \"command\",\n                      clicked: authSwitchHandler,\n                      buttonType: \"button\",\n                      isEnabled: true,\n                      children: \"Login\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  buttonType: \"submit\",\n                  buttonClass: \"button\",\n                  buttonId: \"button\",\n                  isEnabled: props.controls,\n                  children: !isSignup ? 'Login' : 'Sign Up'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"8hzW+1plE0fhfcCvUTUhPG4zHc4=\");\n\n_c = Auth;\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token !== null,\n    authRedirectPath: state.auth.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuthAttempt: (email, password, isSignup) => {\n      dispatch(authActionTypes.authAttempt(email, password, isSignup));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useEffect","useState","Button","Input","Navigate","authActionTypes","connect","checkValidity","updateObject","Spinner","Cart","Wrapper","CartItemList","Auth","props","isSignup","setIsSignup","controls","setControls","email","inputType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","confirm","isEqualToPassword","isNeeded","authSwitchHandler","updatedControls","console","log","inputChangedHandler","event","inputIdentifier","target","formSubmitHandler","preventDefault","confirmPassword","onAuthAttempt","errorMessage","controlElementsArray","key","push","id","config","filter","control","form","loading","map","controlElement","charAt","toUpperCase","slice","backgroundColor","mapStateToProps","state","auth","error","token","authRedirectPath","mapDispatchToProps","dispatch","authAttempt"],"sources":["A:/PORTFÓLIO/ProjetoNodeShopComRestAPI/front-end-react/src/pages/Auth/Auth.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from '../../components/UI/Input/Input';\r\n\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nimport * as authActionTypes from '../../store/actions/auth';\r\n\r\nimport '../Cart/Cart.css';\r\nimport './Auth.css';\r\nimport { connect } from 'react-redux';\r\nimport { checkValidity, updateObject } from '../../shared/util';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport Cart from '../../components/Cart/Cart';\r\nimport Wrapper from '../../components/Wrapper/Wrapper';\r\nimport CartItemList from '../../components/Cart/CartItemList/CartItemList';\r\n\r\nconst Auth = (props) => {\r\n  const [isSignup, setIsSignup] = useState(false);\r\n\r\n  const [controls, setControls] = useState({\r\n    email: {\r\n      inputType: 'input',\r\n      elementConfig: {\r\n        type: 'email',\r\n        placeholder: 'exemplo@exemplo',\r\n      },\r\n      value: '',\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n\r\n    password: {\r\n      inputType: 'input',\r\n      elementConfig: {\r\n        type: 'password',\r\n        placeholder: 'exemplo',\r\n      },\r\n      value: '',\r\n      validation: {\r\n        required: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    confirm: {\r\n      inputType: 'input',\r\n      elementConfig: {\r\n        type: 'password',\r\n        placeholder: 'exemplo',\r\n      },\r\n      value: '',\r\n      validation: {\r\n        required: true,\r\n        isEqualToPassword: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n      isNeeded: false,\r\n    },\r\n  });\r\n\r\n  const authSwitchHandler = () => {\r\n    setIsSignup(!isSignup);\r\n    const updatedControls = updateObject(controls, {\r\n      confirm: updateObject(controls.confirm, {\r\n        isNeeded: !controls.confirm.isNeeded,\r\n      }),\r\n    });\r\n\r\n    setControls(updatedControls);\r\n    console.log(updatedControls);\r\n  };\r\n\r\n  const inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedControls = updateObject(controls, {\r\n      [inputIdentifier]: updateObject(controls[inputIdentifier], {\r\n        value: event.target.value,\r\n        valid: checkValidity(\r\n          event.target.value,\r\n          controls[inputIdentifier].validation,\r\n          controls.password.value\r\n        ),\r\n        touched: true,\r\n      }),\r\n    });\r\n\r\n    setControls(updatedControls);\r\n  };\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const email = controls.email.value;\r\n\r\n    const password = controls.password.value;\r\n\r\n    const confirmPassword = controls.confirm.value;\r\n\r\n    props.onAuthAttempt(email, password, confirmPassword, isSignup);\r\n  };\r\n\r\n  let errorMessage = false;\r\n\r\n  if (props.errorMessage) {\r\n    errorMessage = props.errorMessage;\r\n  }\r\n\r\n  let controlElementsArray = [];\r\n\r\n  for (let key in controls) {\r\n    controlElementsArray.push({\r\n      id: key,\r\n      config: controls[key],\r\n    });\r\n  }\r\n\r\n  if (!isSignup) {\r\n    controlElementsArray = controlElementsArray.filter((control) => {\r\n      return control.id !== 'confirm';\r\n    });\r\n  }\r\n\r\n  let form = !props.loading ? (\r\n    controlElementsArray.map((controlElement) => {\r\n      return (\r\n        <div className=\"control\" key={controlElement.id}>\r\n          <label htmlFor={controlElement.id}>\r\n            {controlElement.id.charAt(0).toUpperCase() +\r\n              controlElement.id.slice(1)}{' '}\r\n            {controlElement.id === 'confirm' ? 'Password' : ''}\r\n          </label>\r\n          <Input\r\n            changed={(event) => {\r\n              inputChangedHandler(event, controlElement.id);\r\n            }}\r\n            inputKey={controlElement.id}\r\n            elementId={controlElement.id}\r\n            touched={controlElement.config.touched}\r\n            invalid={!controlElement.config.valid}\r\n            shouldValidate={controlElement.config.validation}\r\n            elementType={controlElement.config.inputType}\r\n            value={controlElement.value}\r\n            elementConfig={controlElement.config.elementConfig}\r\n          />\r\n        </div>\r\n      );\r\n    })\r\n  ) : (\r\n    <Spinner></Spinner>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Cart>\r\n        <Wrapper>\r\n          <CartItemList>\r\n            <div\r\n              className=\"no-product\"\r\n              style={{ backgroundColor: 'var(--lightest-green)' }}\r\n            >\r\n              <li className=\"no-product cart-item\">\r\n                <div className=\"user-message user-message--error\">\r\n                  {errorMessage}\r\n                </div>\r\n\r\n                <form onSubmit={formSubmitHandler} className=\"login-form\">\r\n                  {form}\r\n                  <div className=\"switch-link\">\r\n                    {!isSignup ? (\r\n                      <p>\r\n                        No Account? &nbsp;\r\n                        <Button\r\n                          buttonClass=\"command\"\r\n                          clicked={authSwitchHandler}\r\n                          buttonType=\"button\"\r\n                          isEnabled={true}\r\n                        >\r\n                          Join NodeShop\r\n                        </Button>\r\n                      </p>\r\n                    ) : (\r\n                      <p>\r\n                        Already have an account? &nbsp;\r\n                        <Button\r\n                          buttonClass=\"command\"\r\n                          clicked={authSwitchHandler}\r\n                          buttonType=\"button\"\r\n                          isEnabled={true}\r\n                        >\r\n                          Login\r\n                        </Button>\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                  <Button\r\n                    buttonType=\"submit\"\r\n                    buttonClass=\"button\"\r\n                    buttonId=\"button\"\r\n                    isEnabled={props.controls}\r\n                  >\r\n                    {!isSignup ? 'Login' : 'Sign Up'}\r\n                  </Button>\r\n                </form>\r\n              </li>\r\n            </div>\r\n          </CartItemList>\r\n        </Wrapper>\r\n        {/* </div> */}\r\n      </Cart>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    token: state.auth.token !== null,\r\n    authRedirectPath: state.auth.authRedirectPath,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuthAttempt: (email, password, isSignup) => {\r\n      dispatch(authActionTypes.authAttempt(email, password, isSignup));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}