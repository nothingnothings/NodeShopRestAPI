{"ast":null,"code":"import * as authActionTypes from './authActionTypes';\nimport axiosOrder from '../../axios-orders';\nexport const authStart = () => {\n  return {\n    type: authActionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId, email) => {\n  return {\n    type: authActionTypes.AUTH_SUCCESS,\n    token: token,\n    userId: userId,\n    email: email\n  };\n};\nexport const authFail = error => {\n  return {\n    type: authActionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const authLogout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('email');\n  localStorage.removeItem('userId');\n  return {\n    type: authActionTypes.AUTH_LOGOUT\n  };\n};\n\nconst checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(authLogout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authAttempt = function (email, password) {\n  let confirmPassword = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let isSignup = arguments.length > 3 ? arguments[3] : undefined;\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password // returnSecureToken: true     ////optional value (FIREBASE)\n\n    };\n    let url = '/signup';\n\n    if (!isSignup) {\n      url = '/login';\n    }\n\n    axiosOrder.post(url, authData).then(response => {\n      const decryptedJwtExpirationDate = atob(response.data.token.split(\".\")[1]);\n      const expirationDate = JSON.parse(decryptedJwtExpirationDate).exp;\n      const expiresIn = 3600; // const expirationDate = new Date(\n      //   new Date().getTime() + response.data.expiresIn * 1000\n      // );\n\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('userId', response.data.userId);\n      localStorage.setItem('email', response.data.email);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(response.data.token, response.data.userId, response.data.email));\n      dispatch(checkAuthTimeout(expiresIn));\n    }).catch(error => {\n      dispatch(authFail(error.response.data.error));\n    });\n  };\n};\nexport const checkAuthState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    console.log(token);\n\n    if (!token) {\n      dispatch(authLogout());\n    } else {\n      console.log(parseInt(localStorage.getItem('expirationDate')));\n      const expirationDate = new Date(parseInt(localStorage.getItem('expirationDate')));\n      console.log(new Date());\n\n      if (expirationDate <= new Date()) {\n        console.log('UNLOGGED');\n        dispatch(authLogout());\n      } else {\n        const userId = localStorage.getItem('userId');\n        const email = localStorage.getItem('email');\n        console.log(userId, email);\n        dispatch(authSuccess(token, userId, email));\n        console.log((expirationDate.getTime() - new Date().getTime()) / 1000);\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"names":["authActionTypes","axiosOrder","authStart","type","AUTH_START","authSuccess","token","userId","email","AUTH_SUCCESS","authFail","error","AUTH_FAIL","authLogout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authAttempt","password","confirmPassword","isSignup","authData","url","post","then","response","decryptedJwtExpirationDate","atob","data","split","expirationDate","JSON","parse","exp","expiresIn","setItem","catch","checkAuthState","getItem","console","log","parseInt","Date","getTime"],"sources":["A:/PORTFÃ“LIO/ProjetoNodeShopComRestAPI/front-end-react/src/store/actions/auth.js"],"sourcesContent":["import * as authActionTypes from './authActionTypes';\r\n\r\n\r\nimport axiosOrder from '../../axios-orders';\r\n\r\n\r\nexport const authStart = () => {\r\n    return {\r\n      type: authActionTypes.AUTH_START,\r\n    };\r\n  };\r\n  \r\n  export const authSuccess = (token, userId, email) => {\r\n    return {\r\n      type: authActionTypes.AUTH_SUCCESS,\r\n      token: token,\r\n      userId: userId,\r\n      email: email,\r\n    };\r\n  };\r\n  \r\n  export const authFail = (error) => {\r\n    return {\r\n      type: authActionTypes.AUTH_FAIL,\r\n      error: error,\r\n    };\r\n  };\r\n  \r\n  export const authLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('email');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n      type: authActionTypes.AUTH_LOGOUT,\r\n    };\r\n  };\r\n\r\n\r\n\r\n  \r\n\r\nconst checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(authLogout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const authAttempt = (email, password, confirmPassword=null, isSignup) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n\r\n\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      // returnSecureToken: true     ////optional value (FIREBASE)\r\n    };\r\n\r\n    let url = '/signup';\r\n\r\n    if (!isSignup) {\r\n      url = '/login';\r\n    }\r\n\r\n    axiosOrder\r\n      .post(url, authData)\r\n      .then((response) => {\r\n\r\n\r\n\r\n        const decryptedJwtExpirationDate = atob(response.data.token.split(\".\")[1]);\r\n\r\n\r\n        const expirationDate = JSON.parse(decryptedJwtExpirationDate).exp;\r\n\r\n\r\n        const expiresIn = 3600;\r\n\r\n        // const expirationDate = new Date(\r\n        //   new Date().getTime() + response.data.expiresIn * 1000\r\n        // );\r\n        localStorage.setItem('token', response.data.token);\r\n        localStorage.setItem('userId', response.data.userId);\r\n        localStorage.setItem('email', response.data.email);\r\n        localStorage.setItem('expirationDate', expirationDate);\r\n        dispatch(\r\n          authSuccess(\r\n            response.data.token,\r\n            response.data.userId,\r\n            response.data.email\r\n          )\r\n        );\r\n        dispatch(checkAuthTimeout(expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const checkAuthState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem('token');\r\n    console.log(token);\r\n    if (!token) {\r\n      dispatch(authLogout());\r\n    } else {\r\n      console.log(parseInt(localStorage.getItem('expirationDate')))\r\n      const expirationDate = new Date(parseInt(localStorage.getItem('expirationDate')));\r\n      console.log(new Date())\r\n      if (expirationDate <= new Date()) {\r\n        console.log('UNLOGGED');\r\n        dispatch(authLogout());\r\n      } else {\r\n        const userId = localStorage.getItem('userId');\r\n        const email = localStorage.getItem('email');\r\n        console.log(userId, email);\r\n        dispatch(authSuccess(token, userId, email));\r\n        console.log((expirationDate.getTime() - new Date().getTime()) / 1000);\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}