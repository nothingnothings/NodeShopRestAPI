{"ast":null,"code":"var _jsxFileName = \"A:\\\\PORTF\\xD3LIO\\\\ProjetoNodeShopComRestAPI\\\\front-end-react\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { combineReducers, configureStore } from '@reduxjs/toolkit'; ///must-have code\n\nimport { compose } from 'redux'; ///optional code (to be removed, dev-only)\n\nimport thunk from 'redux-thunk'; ///maybe must-have code\n\nimport authReducer from './store/reducers/authReducer';\nimport orderReducer from './store/reducers/orderReducer';\nimport cartReducer from './store/reducers/cartReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose; ///versão óptima de ATIVAÇÃO DO 'REDUX DEV TOOLS'... --> por meio deste código, o redux devtools só vai funcionar/realmente mostrar o 'redux state' nas redux devtools SE NÓS REALMENTE ESTIVERMOS DURANTE 'dev mode', e não PRODUCTION MODE....\n\nconst reducer = combineReducers({\n  auth: authReducer,\n  order: orderReducer,\n  cart: cartReducer\n});\nconst store = configureStore(reducer, composeEnhancers(thunk));\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","combineReducers","configureStore","compose","thunk","authReducer","orderReducer","cartReducer","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reducer","auth","order","cart","store","root","createRoot","document","getElementById","render"],"sources":["A:/PORTFÓLIO/ProjetoNodeShopComRestAPI/front-end-react/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nimport { combineReducers, configureStore } from '@reduxjs/toolkit'; ///must-have code\n\nimport { compose } from 'redux'; ///optional code (to be removed, dev-only)\nimport thunk from 'redux-thunk'; ///maybe must-have code\n\nimport authReducer from './store/reducers/authReducer';\nimport orderReducer from './store/reducers/orderReducer';\nimport cartReducer from './store/reducers/cartReducer';\n\nconst composeEnhancers =\n  process.env.NODE_ENV === 'development'\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose; ///versão óptima de ATIVAÇÃO DO 'REDUX DEV TOOLS'... --> por meio deste código, o redux devtools só vai funcionar/realmente mostrar o 'redux state' nas redux devtools SE NÓS REALMENTE ESTIVERMOS DURANTE 'dev mode', e não PRODUCTION MODE....\n\nconst reducer = combineReducers({\n  auth: authReducer,\n  order: orderReducer,\n  cart: cartReducer\n});\n\nconst store = configureStore(reducer, composeEnhancers(thunk));\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,kBAAhD,C,CAAoE;;AAEpE,SAASC,OAAT,QAAwB,OAAxB,C,CAAiC;;AACjC,OAAOC,KAAP,MAAkB,aAAlB,C,CAAiC;;AAEjC,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAEA,MAAMC,gBAAgB,GACpBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACIC,MAAM,CAACC,oCADX,GAEI,QAAQV,OAHd,C,CAGuB;;AAEvB,MAAMW,OAAO,GAAGb,eAAe,CAAC;EAC9Bc,IAAI,EAAEV,WADwB;EAE9BW,KAAK,EAAEV,YAFuB;EAG9BW,IAAI,EAAEV;AAHwB,CAAD,CAA/B;AAMA,MAAMW,KAAK,GAAGhB,cAAc,CAACY,OAAD,EAAUN,gBAAgB,CAACJ,KAAD,CAA1B,CAA5B;AAEA,MAAMe,IAAI,GAAGpB,QAAQ,CAACqB,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AAEAH,IAAI,CAACI,MAAL,eACE,QAAC,KAAD,CAAO,UAAP;EAAA,uBACE,QAAC,GAAD;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF"},"metadata":{},"sourceType":"module"}