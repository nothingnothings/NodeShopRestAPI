{"ast":null,"code":"import _slicedToArray from\"A:/PORTF\\xD3LIO/ProjetoNodeShopComRestAPI/front-end-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{Navigate}from'react-router-dom';import{connect}from'react-redux';import StripeCheckout from'react-stripe-checkout';import axiosOrder from'../../axios-orders';import*as cartActionTypes from'../../store/actions/cart';import Cart from'../../components/Cart/Cart';import CartItem from'../../components/Cart/CartItemList/CartItem/CartItem';import CartItemList from'../../components/Cart/CartItemList/CartItemList';import Spinner from'../../components/UI/Spinner/Spinner';import'../Cart/Cart.css';import'./Checkout.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Checkout=function Checkout(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),currentUser=_useState2[0],setCurrentUser=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),toOrders=_useState4[0],setToOrders=_useState4[1];useEffect(function(){setCurrentUser(props.token);if(currentUser){props.onFetchCart(props.token,props.userId);}},[currentUser]);var cart=/*#__PURE__*/_jsx(Spinner,{});var onToken=function onToken(token){axiosOrder.post('/create-order',{token:JSON.stringify(token)},{headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(props.token),UserId:\"\".concat(props.userId)}}).then(function(res){setToOrders(true);});};var redirectToOrders;if(toOrders){redirectToOrders=/*#__PURE__*/_jsx(Navigate,{to:\"/orders\"});}if(!props.loading&&props.cart.products.length>=1){cart=/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(CartItemList,{children:props.cart.products.map(function(product){return/*#__PURE__*/_jsx(CartItem,{productId:product.productId,quantity:product.quantity,isCheckout:true},product.productId._id);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"cart-item__results\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Total:\"}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"US$ \",props.cart.totalPrice.toFixed(2)]}),/*#__PURE__*/_jsx(StripeCheckout,{token:onToken,stripeKey:\"pk_test_51JzRu5CmbCw1fMfw67d3Wwex6B9QCbMHYAVNN8TS4mqwzz3jSg9kMa0QuejL7BXnb1MX09efAsMeNnCVF8KHL3WD0096Zc6CqK\",name:\"Your Order\",description:\"The items you ordered\",amount:props.cart.totalPrice.toFixed(2)*100,image:\"https://stripe.com/img/documentation/checkout/marketplace.png\",currency:\"BRL\",children:/*#__PURE__*/_jsx(\"div\",{className:\"stripe-button-el\",children:/*#__PURE__*/_jsx(\"button\",{children:/*#__PURE__*/_jsx(\"span\",{children:\"Pay with Card\"})})})})]}),redirectToOrders]});}return/*#__PURE__*/_jsx(Cart,{children:cart});};var mapStateToProps=function mapStateToProps(state){return{cart:state.cart,loading:state.cart.loading,totalPrice:state.cart.totalPrice,error:state.cart.error,token:state.auth.token,userId:state.auth.userId};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onFetchCart:function onFetchCart(token,userId){dispatch(cartActionTypes.asyncFetchCartStart(token,userId));}};};export default connect(mapStateToProps,mapDispatchToProps)(Checkout);","map":{"version":3,"names":["React","useEffect","useState","Navigate","connect","StripeCheckout","axiosOrder","cartActionTypes","Cart","CartItem","CartItemList","Spinner","Checkout","props","currentUser","setCurrentUser","toOrders","setToOrders","token","onFetchCart","userId","cart","onToken","post","JSON","stringify","headers","Authorization","UserId","then","res","redirectToOrders","loading","products","length","map","product","productId","quantity","_id","totalPrice","toFixed","mapStateToProps","state","error","auth","mapDispatchToProps","dispatch","asyncFetchCartStart"],"sources":["A:/PORTFÃ“LIO/ProjetoNodeShopComRestAPI/front-end-react/src/pages/Checkout/Checkout.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport axiosOrder from '../../axios-orders';\r\n\r\nimport * as cartActionTypes from '../../store/actions/cart';\r\n\r\nimport Cart from '../../components/Cart/Cart';\r\nimport CartItem from '../../components/Cart/CartItemList/CartItem/CartItem';\r\nimport CartItemList from '../../components/Cart/CartItemList/CartItemList';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nimport '../Cart/Cart.css';\r\nimport './Checkout.css';\r\n\r\nconst Checkout = (props) => {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [toOrders, setToOrders] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCurrentUser(props.token);\r\n    if (currentUser) {\r\n      props.onFetchCart(props.token, props.userId);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  let cart = <Spinner></Spinner>;\r\n\r\n  const onToken = (token) => {\r\n    axiosOrder\r\n      .post(\r\n        '/create-order',\r\n        {\r\n          token: JSON.stringify(token),\r\n        },\r\n\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${props.token}`,\r\n            UserId: `${props.userId}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setToOrders(true);\r\n      });\r\n  };\r\n\r\n  let redirectToOrders;\r\n\r\n  if (toOrders) {\r\n    redirectToOrders = <Navigate to=\"/orders\"></Navigate>;\r\n  }\r\n\r\n  if (!props.loading && props.cart.products.length >= 1) {\r\n    cart = (\r\n      <React.Fragment>\r\n        <CartItemList>\r\n          {props.cart.products.map((product) => {\r\n            return (\r\n              <CartItem\r\n                key={product.productId._id}\r\n                productId={product.productId}\r\n                quantity={product.quantity}\r\n                isCheckout\r\n              ></CartItem>\r\n            );\r\n          })}\r\n        </CartItemList>\r\n        <div className=\"cart-item__results\">\r\n          <h2>Total:</h2>\r\n          <h2>US$ {props.cart.totalPrice.toFixed(2)}</h2>\r\n          <StripeCheckout\r\n            token={onToken}\r\n            stripeKey=\"pk_test_51JzRu5CmbCw1fMfw67d3Wwex6B9QCbMHYAVNN8TS4mqwzz3jSg9kMa0QuejL7BXnb1MX09efAsMeNnCVF8KHL3WD0096Zc6CqK\"\r\n            name=\"Your Order\"\r\n            description=\"The items you ordered\"\r\n            amount={props.cart.totalPrice.toFixed(2) * 100}\r\n            image=\"https://stripe.com/img/documentation/checkout/marketplace.png\"\r\n            currency=\"BRL\"\r\n          >\r\n            <div className=\"stripe-button-el\">\r\n              <button>\r\n                <span>Pay with Card</span>\r\n              </button>\r\n            </div>\r\n          </StripeCheckout>\r\n        </div>\r\n        {redirectToOrders}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return <Cart>{cart}</Cart>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.cart,\r\n    loading: state.cart.loading,\r\n    totalPrice: state.cart.totalPrice,\r\n    error: state.cart.error,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchCart: (token, userId) => {\r\n      dispatch(cartActionTypes.asyncFetchCartStart(token, userId));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);\r\n"],"mappings":"+IAAA,MAAOA,MAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,eAAP,KAA2B,uBAA3B,CACA,MAAOC,WAAP,KAAuB,oBAAvB,CAEA,MAAO,GAAKC,gBAAZ,KAAiC,0BAAjC,CAEA,MAAOC,KAAP,KAAiB,4BAAjB,CACA,MAAOC,SAAP,KAAqB,sDAArB,CACA,MAAOC,aAAP,KAAyB,iDAAzB,CACA,MAAOC,QAAP,KAAoB,qCAApB,CAEA,MAAO,kBAAP,CACA,MAAO,gBAAP,C,wFAEA,GAAMC,SAAQ,CAAG,QAAXA,SAAW,CAACC,KAAD,CAAW,CAC1B,cAAsCX,QAAQ,EAA9C,wCAAOY,WAAP,eAAoBC,cAApB,eACA,eAAgCb,QAAQ,CAAC,KAAD,CAAxC,yCAAOc,QAAP,eAAiBC,WAAjB,eAEAhB,SAAS,CAAC,UAAM,CACdc,cAAc,CAACF,KAAK,CAACK,KAAP,CAAd,CACA,GAAIJ,WAAJ,CAAiB,CACfD,KAAK,CAACM,WAAN,CAAkBN,KAAK,CAACK,KAAxB,CAA+BL,KAAK,CAACO,MAArC,EACD,CACF,CALQ,CAKN,CAACN,WAAD,CALM,CAAT,CAOA,GAAIO,KAAI,cAAG,KAAC,OAAD,IAAX,CAEA,GAAMC,QAAO,CAAG,QAAVA,QAAU,CAACJ,KAAD,CAAW,CACzBZ,UAAU,CACPiB,IADH,CAEI,eAFJ,CAGI,CACEL,KAAK,CAAEM,IAAI,CAACC,SAAL,CAAeP,KAAf,CADT,CAHJ,CAOI,CACEQ,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,aAAa,kBAAYd,KAAK,CAACK,KAAlB,CAFN,CAGPU,MAAM,WAAKf,KAAK,CAACO,MAAX,CAHC,CADX,CAPJ,EAeGS,IAfH,CAeQ,SAACC,GAAD,CAAS,CACbb,WAAW,CAAC,IAAD,CAAX,CACD,CAjBH,EAkBD,CAnBD,CAqBA,GAAIc,iBAAJ,CAEA,GAAIf,QAAJ,CAAc,CACZe,gBAAgB,cAAG,KAAC,QAAD,EAAU,EAAE,CAAC,SAAb,EAAnB,CACD,CAED,GAAI,CAAClB,KAAK,CAACmB,OAAP,EAAkBnB,KAAK,CAACQ,IAAN,CAAWY,QAAX,CAAoBC,MAApB,EAA8B,CAApD,CAAuD,CACrDb,IAAI,cACF,MAAC,KAAD,CAAO,QAAP,yBACE,KAAC,YAAD,WACGR,KAAK,CAACQ,IAAN,CAAWY,QAAX,CAAoBE,GAApB,CAAwB,SAACC,OAAD,CAAa,CACpC,mBACE,KAAC,QAAD,EAEE,SAAS,CAAEA,OAAO,CAACC,SAFrB,CAGE,QAAQ,CAAED,OAAO,CAACE,QAHpB,CAIE,UAAU,KAJZ,EACOF,OAAO,CAACC,SAAR,CAAkBE,GADzB,CADF,CAQD,CATA,CADH,EADF,cAaE,aAAK,SAAS,CAAC,oBAAf,wBACE,8BADF,cAEE,6BAAS1B,KAAK,CAACQ,IAAN,CAAWmB,UAAX,CAAsBC,OAAtB,CAA8B,CAA9B,CAAT,GAFF,cAGE,KAAC,cAAD,EACE,KAAK,CAAEnB,OADT,CAEE,SAAS,CAAC,6GAFZ,CAGE,IAAI,CAAC,YAHP,CAIE,WAAW,CAAC,uBAJd,CAKE,MAAM,CAAET,KAAK,CAACQ,IAAN,CAAWmB,UAAX,CAAsBC,OAAtB,CAA8B,CAA9B,EAAmC,GAL7C,CAME,KAAK,CAAC,+DANR,CAOE,QAAQ,CAAC,KAPX,uBASE,YAAK,SAAS,CAAC,kBAAf,uBACE,qCACE,uCADF,EADF,EATF,EAHF,GAbF,CAgCGV,gBAhCH,GADF,CAoCD,CAED,mBAAO,KAAC,IAAD,WAAOV,IAAP,EAAP,CACD,CAhFD,CAkFA,GAAMqB,gBAAe,CAAG,QAAlBA,gBAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLtB,IAAI,CAAEsB,KAAK,CAACtB,IADP,CAELW,OAAO,CAAEW,KAAK,CAACtB,IAAN,CAAWW,OAFf,CAGLQ,UAAU,CAAEG,KAAK,CAACtB,IAAN,CAAWmB,UAHlB,CAILI,KAAK,CAAED,KAAK,CAACtB,IAAN,CAAWuB,KAJb,CAKL1B,KAAK,CAAEyB,KAAK,CAACE,IAAN,CAAW3B,KALb,CAMLE,MAAM,CAAEuB,KAAK,CAACE,IAAN,CAAWzB,MANd,CAAP,CAQD,CATD,CAWA,GAAM0B,mBAAkB,CAAG,QAArBA,mBAAqB,CAACC,QAAD,CAAc,CACvC,MAAO,CACL5B,WAAW,CAAE,qBAACD,KAAD,CAAQE,MAAR,CAAmB,CAC9B2B,QAAQ,CAACxC,eAAe,CAACyC,mBAAhB,CAAoC9B,KAApC,CAA2CE,MAA3C,CAAD,CAAR,CACD,CAHI,CAAP,CAKD,CAND,CAQA,cAAehB,QAAO,CAACsC,eAAD,CAAkBI,kBAAlB,CAAP,CAA6ClC,QAA7C,CAAf"},"metadata":{},"sourceType":"module"}