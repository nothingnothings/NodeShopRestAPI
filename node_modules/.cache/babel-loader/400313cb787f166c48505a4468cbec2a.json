{"ast":null,"code":"import * as authActionTypes from './authActionTypes';\nimport axiosOrder from '../../axios-orders';\nexport const authStart = () => {\n  return {\n    type: authActionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId, email) => {\n  return {\n    type: authActionTypes.AUTH_SUCCESS,\n    token: token,\n    userId: userId,\n    email: email\n  };\n};\nexport const authFail = error => {\n  return {\n    type: authActionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const authLogout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('email');\n  localStorage.removeItem('userId');\n  return {\n    type: authActionTypes.AUTH_LOGOUT\n  };\n};\n\nconst checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(authLogout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authAttempt = function (email, password) {\n  let confirmPassword = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let isSignup = arguments.length > 3 ? arguments[3] : undefined;\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password // returnSecureToken: true     ////optional value (FIREBASE)\n\n    };\n    let url = 'http://localhost:8080/signup';\n\n    if (!isSignup) {\n      url = 'https://localhost:8080/auth/login';\n    }\n\n    axios.post(url, authData).then(response => {\n      const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n      localStorage.setItem('token', response.data.idToken);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('userId', response.data.localId);\n      localStorage.setItem('email', response.data.email);\n      dispatch(authSuccess(response.data.idToken, response.data.localId, response.data.email));\n      dispatch(checkAuthTimeout(response.data.expiresIn));\n    }).catch(error => {\n      dispatch(authFail(error.response.data.error));\n    });\n  };\n};\nexport const checkAuthState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      dispatch(authLogout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(authLogout());\n      } else {\n        const userId = localStorage.getItem('userId');\n        const email = localStorage.getItem('email');\n        dispatch(authSuccess(token, userId, email));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"names":["authActionTypes","axiosOrder","authStart","type","AUTH_START","authSuccess","token","userId","email","AUTH_SUCCESS","authFail","error","AUTH_FAIL","authLogout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authAttempt","password","confirmPassword","isSignup","authData","url","axios","post","then","response","expirationDate","Date","getTime","data","expiresIn","setItem","idToken","localId","catch","checkAuthState","getItem"],"sources":["A:/PORTFÃ“LIO/ProjetoNodeShopComRestAPI/front-end-react/src/store/actions/auth.js"],"sourcesContent":["import * as authActionTypes from './authActionTypes';\r\n\r\n\r\nimport axiosOrder from '../../axios-orders';\r\n\r\n\r\nexport const authStart = () => {\r\n    return {\r\n      type: authActionTypes.AUTH_START,\r\n    };\r\n  };\r\n  \r\n  export const authSuccess = (token, userId, email) => {\r\n    return {\r\n      type: authActionTypes.AUTH_SUCCESS,\r\n      token: token,\r\n      userId: userId,\r\n      email: email,\r\n    };\r\n  };\r\n  \r\n  export const authFail = (error) => {\r\n    return {\r\n      type: authActionTypes.AUTH_FAIL,\r\n      error: error,\r\n    };\r\n  };\r\n  \r\n  export const authLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('email');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n      type: authActionTypes.AUTH_LOGOUT,\r\n    };\r\n  };\r\n\r\n\r\n\r\n  \r\n\r\nconst checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(authLogout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const authAttempt = (email, password, confirmPassword=null, isSignup) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n\r\n\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      // returnSecureToken: true     ////optional value (FIREBASE)\r\n    };\r\n\r\n    let url = 'http://localhost:8080/signup';\r\n\r\n    if (!isSignup) {\r\n      url = 'https://localhost:8080/auth/login';\r\n    }\r\n\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n        localStorage.setItem('token', response.data.idToken);\r\n        localStorage.setItem('expirationDate', expirationDate);\r\n        localStorage.setItem('userId', response.data.localId);\r\n        localStorage.setItem('email', response.data.email);\r\n        dispatch(\r\n          authSuccess(\r\n            response.data.idToken,\r\n            response.data.localId,\r\n            response.data.email\r\n          )\r\n        );\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const checkAuthState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      dispatch(authLogout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(authLogout());\r\n      } else {\r\n        const userId = localStorage.getItem('userId');\r\n        const email = localStorage.getItem('email');\r\n        dispatch(authSuccess(token, userId, email));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,OAAO,KAAKA,eAAZ,MAAiC,mBAAjC;AAGA,OAAOC,UAAP,MAAuB,oBAAvB;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAC3B,OAAO;IACLC,IAAI,EAAEH,eAAe,CAACI;EADjB,CAAP;AAGD,CAJI;AAML,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,KAAhB,KAA0B;EACnD,OAAO;IACLL,IAAI,EAAEH,eAAe,CAACS,YADjB;IAELH,KAAK,EAAEA,KAFF;IAGLC,MAAM,EAAEA,MAHH;IAILC,KAAK,EAAEA;EAJF,CAAP;AAMD,CAPM;AASP,OAAO,MAAME,QAAQ,GAAIC,KAAD,IAAW;EACjC,OAAO;IACLR,IAAI,EAAEH,eAAe,CAACY,SADjB;IAELD,KAAK,EAAEA;EAFF,CAAP;AAID,CALM;AAOP,OAAO,MAAME,UAAU,GAAG,MAAM;EAC9BC,YAAY,CAACC,UAAb,CAAwB,OAAxB;EACAD,YAAY,CAACC,UAAb,CAAwB,gBAAxB;EACAD,YAAY,CAACC,UAAb,CAAwB,OAAxB;EACAD,YAAY,CAACC,UAAb,CAAwB,QAAxB;EACA,OAAO;IACLZ,IAAI,EAAEH,eAAe,CAACgB;EADjB,CAAP;AAGD,CARM;;AAcT,MAAMC,gBAAgB,GAAIC,cAAD,IAAoB;EAC3C,OAAQC,QAAD,IAAc;IACnBC,UAAU,CAAC,MAAM;MACfD,QAAQ,CAACN,UAAU,EAAX,CAAR;IACD,CAFS,EAEPK,cAAc,GAAG,IAFV,CAAV;EAGD,CAJD;AAKD,CAND;;AAQA,OAAO,MAAMG,WAAW,GAAG,UAACb,KAAD,EAAQc,QAAR,EAAqD;EAAA,IAAnCC,eAAmC,uEAAnB,IAAmB;EAAA,IAAbC,QAAa;EAC9E,OAAQL,QAAD,IAAc;IACnBA,QAAQ,CAACjB,SAAS,EAAV,CAAR;IAKA,MAAMuB,QAAQ,GAAG;MACfjB,KAAK,EAAEA,KADQ;MAEfc,QAAQ,EAAEA,QAFK,CAGf;;IAHe,CAAjB;IAMA,IAAII,GAAG,GAAG,8BAAV;;IAEA,IAAI,CAACF,QAAL,EAAe;MACbE,GAAG,GAAG,mCAAN;IACD;;IAEDC,KAAK,CACFC,IADH,CACQF,GADR,EACaD,QADb,EAEGI,IAFH,CAESC,QAAD,IAAc;MAClB,MAAMC,cAAc,GAAG,IAAIC,IAAJ,CACrB,IAAIA,IAAJ,GAAWC,OAAX,KAAuBH,QAAQ,CAACI,IAAT,CAAcC,SAAd,GAA0B,IAD5B,CAAvB;MAGArB,YAAY,CAACsB,OAAb,CAAqB,OAArB,EAA8BN,QAAQ,CAACI,IAAT,CAAcG,OAA5C;MACAvB,YAAY,CAACsB,OAAb,CAAqB,gBAArB,EAAuCL,cAAvC;MACAjB,YAAY,CAACsB,OAAb,CAAqB,QAArB,EAA+BN,QAAQ,CAACI,IAAT,CAAcI,OAA7C;MACAxB,YAAY,CAACsB,OAAb,CAAqB,OAArB,EAA8BN,QAAQ,CAACI,IAAT,CAAc1B,KAA5C;MACAW,QAAQ,CACNd,WAAW,CACTyB,QAAQ,CAACI,IAAT,CAAcG,OADL,EAETP,QAAQ,CAACI,IAAT,CAAcI,OAFL,EAGTR,QAAQ,CAACI,IAAT,CAAc1B,KAHL,CADL,CAAR;MAOAW,QAAQ,CAACF,gBAAgB,CAACa,QAAQ,CAACI,IAAT,CAAcC,SAAf,CAAjB,CAAR;IACD,CAlBH,EAmBGI,KAnBH,CAmBU5B,KAAD,IAAW;MAChBQ,QAAQ,CAACT,QAAQ,CAACC,KAAK,CAACmB,QAAN,CAAeI,IAAf,CAAoBvB,KAArB,CAAT,CAAR;IACD,CArBH;EAsBD,CAxCD;AAyCD,CA1CM;AA4CP,OAAO,MAAM6B,cAAc,GAAG,MAAM;EAClC,OAAQrB,QAAD,IAAc;IACnB,MAAMb,KAAK,GAAGQ,YAAY,CAAC2B,OAAb,CAAqB,OAArB,CAAd;;IACA,IAAI,CAACnC,KAAL,EAAY;MACVa,QAAQ,CAACN,UAAU,EAAX,CAAR;IACD,CAFD,MAEO;MACL,MAAMkB,cAAc,GAAG,IAAIC,IAAJ,CAASlB,YAAY,CAAC2B,OAAb,CAAqB,gBAArB,CAAT,CAAvB;;MACA,IAAIV,cAAc,IAAI,IAAIC,IAAJ,EAAtB,EAAkC;QAChCb,QAAQ,CAACN,UAAU,EAAX,CAAR;MACD,CAFD,MAEO;QACL,MAAMN,MAAM,GAAGO,YAAY,CAAC2B,OAAb,CAAqB,QAArB,CAAf;QACA,MAAMjC,KAAK,GAAGM,YAAY,CAAC2B,OAAb,CAAqB,OAArB,CAAd;QACAtB,QAAQ,CAACd,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgBC,KAAhB,CAAZ,CAAR;QACAW,QAAQ,CACNF,gBAAgB,CACd,CAACc,cAAc,CAACE,OAAf,KAA2B,IAAID,IAAJ,GAAWC,OAAX,EAA5B,IAAoD,IADtC,CADV,CAAR;MAKD;IACF;EACF,CAnBD;AAoBD,CArBM"},"metadata":{},"sourceType":"module"}