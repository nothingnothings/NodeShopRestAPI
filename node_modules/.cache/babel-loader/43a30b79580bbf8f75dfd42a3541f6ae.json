{"ast":null,"code":"import * as shopActionTypes from '../actions/shopActionTypes';\nimport axiosOrder from '../../axios-orders';\nexport const fetchProductsStart = () => {\n  return {\n    type: shopActionTypes.FETCH_PRODUCTS_START\n  };\n};\nexport const fetchProductsSuccess = products => {\n  return {\n    type: shopActionTypes.FETCH_PRODUCTS_SUCCESS,\n    products\n  };\n};\nexport const fetchProductsFail = error => {\n  return {\n    type: shopActionTypes.FETCH_PRODUCTS_FAIL,\n    error: error\n  };\n};\nexport const pageChange = pageNumber => {\n  return {\n    type: shopActionTypes.PAGE_CHANGE,\n    pageNumber: pageNumber\n  };\n};\nexport const asyncFetchProductsStart = pageNumber => {\n  return dispatch => {\n    dispatch(fetchProductsStart()); // const queryParams =\n    //   '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"'; ////sujeito a mudanças...\n\n    const page = pageNumber || 1;\n    axiosOrder({\n      method: 'GET',\n      url: `/shop/?page=${page}`\n    }).then(res => {\n      console.log(res);\n      const fetchedProducts = [];\n\n      for (let key in res.data) {\n        fetchedProducts.push({ ...res.data[key],\n          id: key,\n          value: res.data[key]\n        });\n      }\n\n      console.log(fetchedProducts);\n      dispatch(fetchProductsSuccess(fetchedProducts));\n    }).catch(error => {\n      if (error.response) {\n        console.log(error.toJSON());\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      }\n\n      dispatch(fetchProductsFail(error));\n    });\n  };\n};","map":{"version":3,"names":["shopActionTypes","axiosOrder","fetchProductsStart","type","FETCH_PRODUCTS_START","fetchProductsSuccess","products","FETCH_PRODUCTS_SUCCESS","fetchProductsFail","error","FETCH_PRODUCTS_FAIL","pageChange","pageNumber","PAGE_CHANGE","asyncFetchProductsStart","dispatch","page","method","url","then","res","console","log","fetchedProducts","key","data","push","id","value","catch","response","toJSON","status","headers"],"sources":["A:/PORTFÓLIO/ProjetoNodeShopComRestAPI/front-end-react/src/store/actions/shop.js"],"sourcesContent":["import * as shopActionTypes from '../actions/shopActionTypes';\r\n\r\nimport axiosOrder from '../../axios-orders';\r\n\r\nexport const fetchProductsStart = () => {\r\n  return {\r\n    type: shopActionTypes.FETCH_PRODUCTS_START,\r\n  };\r\n};\r\n\r\nexport const fetchProductsSuccess = (products) => {\r\n  return {\r\n    type: shopActionTypes.FETCH_PRODUCTS_SUCCESS,\r\n    products,\r\n  };\r\n};\r\n\r\nexport const fetchProductsFail = (error) => {\r\n  return {\r\n    type: shopActionTypes.FETCH_PRODUCTS_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\n\r\nexport const pageChange = (pageNumber) => {\r\n  return {\r\n    type: shopActionTypes.PAGE_CHANGE,\r\n    pageNumber: pageNumber\r\n  }\r\n}\r\n\r\nexport const asyncFetchProductsStart = (pageNumber) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchProductsStart());\r\n\r\n    // const queryParams =\r\n    //   '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"'; ////sujeito a mudanças...\r\n\r\n\r\n    const page = pageNumber || 1;\r\n    \r\n    axiosOrder(\r\n        {\r\n            method: 'GET',\r\n            url: `/shop/?page=${page}`\r\n        }\r\n    )\r\n      .then((res) => {\r\n        console.log(res);\r\n        const fetchedProducts = [];\r\n        for (let key in res.data) {\r\n          fetchedProducts.push({\r\n            ...res.data[key],\r\n            id: key,\r\n            value: res.data[key]\r\n          });\r\n        }\r\n        console.log(fetchedProducts);\r\n        dispatch(fetchProductsSuccess(fetchedProducts));\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          console.log(error.toJSON())\r\n            console.log(error.response.data);\r\n            console.log(error.response.status);\r\n            console.log(error.response.headers);\r\n        }\r\n        dispatch(fetchProductsFail(error));\r\n      });\r\n  };\r\n};\r\n"],"mappings":"AAAA,OAAO,KAAKA,eAAZ,MAAiC,4BAAjC;AAEA,OAAOC,UAAP,MAAuB,oBAAvB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;EACtC,OAAO;IACLC,IAAI,EAAEH,eAAe,CAACI;EADjB,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,oBAAoB,GAAIC,QAAD,IAAc;EAChD,OAAO;IACLH,IAAI,EAAEH,eAAe,CAACO,sBADjB;IAELD;EAFK,CAAP;AAID,CALM;AAOP,OAAO,MAAME,iBAAiB,GAAIC,KAAD,IAAW;EAC1C,OAAO;IACLN,IAAI,EAAEH,eAAe,CAACU,mBADjB;IAELD,KAAK,EAAEA;EAFF,CAAP;AAID,CALM;AAQP,OAAO,MAAME,UAAU,GAAIC,UAAD,IAAgB;EACxC,OAAO;IACLT,IAAI,EAAEH,eAAe,CAACa,WADjB;IAELD,UAAU,EAAEA;EAFP,CAAP;AAID,CALM;AAOP,OAAO,MAAME,uBAAuB,GAAIF,UAAD,IAAgB;EACrD,OAAQG,QAAD,IAAc;IACnBA,QAAQ,CAACb,kBAAkB,EAAnB,CAAR,CADmB,CAGnB;IACA;;IAGA,MAAMc,IAAI,GAAGJ,UAAU,IAAI,CAA3B;IAEAX,UAAU,CACN;MACIgB,MAAM,EAAE,KADZ;MAEIC,GAAG,EAAG,eAAcF,IAAK;IAF7B,CADM,CAAV,CAMGG,IANH,CAMSC,GAAD,IAAS;MACbC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACA,MAAMG,eAAe,GAAG,EAAxB;;MACA,KAAK,IAAIC,GAAT,IAAgBJ,GAAG,CAACK,IAApB,EAA0B;QACxBF,eAAe,CAACG,IAAhB,CAAqB,EACnB,GAAGN,GAAG,CAACK,IAAJ,CAASD,GAAT,CADgB;UAEnBG,EAAE,EAAEH,GAFe;UAGnBI,KAAK,EAAER,GAAG,CAACK,IAAJ,CAASD,GAAT;QAHY,CAArB;MAKD;;MACDH,OAAO,CAACC,GAAR,CAAYC,eAAZ;MACAR,QAAQ,CAACV,oBAAoB,CAACkB,eAAD,CAArB,CAAR;IACD,CAlBH,EAmBGM,KAnBH,CAmBUpB,KAAD,IAAW;MAChB,IAAIA,KAAK,CAACqB,QAAV,EAAoB;QAClBT,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACsB,MAAN,EAAZ;QACEV,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACqB,QAAN,CAAeL,IAA3B;QACAJ,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACqB,QAAN,CAAeE,MAA3B;QACAX,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACqB,QAAN,CAAeG,OAA3B;MACH;;MACDlB,QAAQ,CAACP,iBAAiB,CAACC,KAAD,CAAlB,CAAR;IACD,CA3BH;EA4BD,CArCD;AAsCD,CAvCM"},"metadata":{},"sourceType":"module"}