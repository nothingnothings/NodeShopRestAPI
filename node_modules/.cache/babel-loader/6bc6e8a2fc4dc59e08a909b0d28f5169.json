{"ast":null,"code":"import _objectSpread from\"A:/PORTF\\xD3LIO/ProjetoNodeShopComRestAPI/front-end-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import*as actionTypes from'./orderActionTypes';import axiosOrder from'../../axios-orders';export var fetchOrdersStart=function fetchOrdersStart(){return{type:actionTypes.FETCH_ORDERS_START};};export var fetchOrdersSuccess=function fetchOrdersSuccess(orders){return{type:actionTypes.FETCH_ORDERS_SUCCESS,orders:orders};};export var fetchOrdersFail=function fetchOrdersFail(error){return{type:actionTypes.FETCH_ORDERS_FAIL,error:error};};export var asyncFetchOrdersStart=function asyncFetchOrdersStart(token,userId){return function(dispatch){dispatch(fetchOrdersStart());axiosOrder.get('/orders',{headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(token),UserId:\"\".concat(userId)}}).then(function(res){var fetchedOrders=[];for(var key in res.data){fetchedOrders.push(_objectSpread(_objectSpread({},res.data[key]),{},{id:key}));}dispatch(fetchOrdersSuccess(fetchedOrders));}).catch(function(error){dispatch(fetchOrdersFail(error));});};};","map":{"version":3,"names":["actionTypes","axiosOrder","fetchOrdersStart","type","FETCH_ORDERS_START","fetchOrdersSuccess","orders","FETCH_ORDERS_SUCCESS","fetchOrdersFail","error","FETCH_ORDERS_FAIL","asyncFetchOrdersStart","token","userId","dispatch","get","headers","Authorization","UserId","then","res","fetchedOrders","key","data","push","id","catch"],"sources":["A:/PORTFÃ“LIO/ProjetoNodeShopComRestAPI/front-end-react/src/store/actions/order.js"],"sourcesContent":["import * as actionTypes from './orderActionTypes';\r\n\r\nimport axiosOrder from '../../axios-orders';\r\n\r\nexport const fetchOrdersStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_START,\r\n  };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n    orders,\r\n  };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const asyncFetchOrdersStart = (token, userId) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchOrdersStart());\r\n    axiosOrder\r\n      .get('/orders', {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n          UserId: `${userId}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const fetchedOrders = [];\r\n        for (const key in res.data) {\r\n          fetchedOrders.push({\r\n            ...res.data[key],\r\n            id: key,\r\n          });\r\n        }\r\n        dispatch(fetchOrdersSuccess(fetchedOrders));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchOrdersFail(error));\r\n      });\r\n  };\r\n};\r\n"],"mappings":"8IAAA,MAAO,GAAKA,YAAZ,KAA6B,oBAA7B,CAEA,MAAOC,WAAP,KAAuB,oBAAvB,CAEA,MAAO,IAAMC,iBAAgB,CAAG,QAAnBA,iBAAmB,EAAM,CACpC,MAAO,CACLC,IAAI,CAAEH,WAAW,CAACI,kBADb,CAAP,CAGD,CAJM,CAMP,MAAO,IAAMC,mBAAkB,CAAG,QAArBA,mBAAqB,CAACC,MAAD,CAAY,CAC5C,MAAO,CACLH,IAAI,CAAEH,WAAW,CAACO,oBADb,CAELD,MAAM,CAANA,MAFK,CAAP,CAID,CALM,CAOP,MAAO,IAAME,gBAAe,CAAG,QAAlBA,gBAAkB,CAACC,KAAD,CAAW,CACxC,MAAO,CACLN,IAAI,CAAEH,WAAW,CAACU,iBADb,CAELD,KAAK,CAAEA,KAFF,CAAP,CAID,CALM,CAOP,MAAO,IAAME,sBAAqB,CAAG,QAAxBA,sBAAwB,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACtD,MAAO,UAACC,QAAD,CAAc,CACnBA,QAAQ,CAACZ,gBAAgB,EAAjB,CAAR,CACAD,UAAU,CACPc,GADH,CACO,SADP,CACkB,CACdC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,aAAa,kBAAYL,KAAZ,CAFN,CAGPM,MAAM,WAAKL,MAAL,CAHC,CADK,CADlB,EAQGM,IARH,CAQQ,SAACC,GAAD,CAAS,CACb,GAAMC,cAAa,CAAG,EAAtB,CACA,IAAK,GAAMC,IAAX,GAAkBF,IAAG,CAACG,IAAtB,CAA4B,CAC1BF,aAAa,CAACG,IAAd,gCACKJ,GAAG,CAACG,IAAJ,CAASD,GAAT,CADL,MAEEG,EAAE,CAAEH,GAFN,IAID,CACDR,QAAQ,CAACT,kBAAkB,CAACgB,aAAD,CAAnB,CAAR,CACD,CAjBH,EAkBGK,KAlBH,CAkBS,SAACjB,KAAD,CAAW,CAChBK,QAAQ,CAACN,eAAe,CAACC,KAAD,CAAhB,CAAR,CACD,CApBH,EAqBD,CAvBD,CAwBD,CAzBM"},"metadata":{},"sourceType":"module"}