{"ast":null,"code":"var _jsxFileName = \"A:\\\\PORTF\\xD3LIO\\\\ProjetoNodeShopComRestAPI\\\\front-end-react\\\\src\\\\pages\\\\Orders\\\\Orders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport CartItemList from '../../components/Cart/CartItemList/CartItemList';\nimport NoProduct from '../../components/Cart/NoProduct/NoProduct';\nimport OrderBoard from '../../components/OrderBoard/OrderBoard';\nimport OrdersItem from '../../components/OrderBoard/Orders/OrdersItem/OrdersItem';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Wrapper from '../../components/Wrapper/Wrapper';\nimport * as orderActionTypes from '../../store/actions/order';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orders = props => {\n  _s();\n\n  useEffect(() => {// props.onFetchOrders(props.token, props.userId);\n    // console.log(props, 'LINEPROPS');\n    // setTimeout(\n    //   () => {\n    //     props.onFetch(props.token, props.userId);\n    //   },\n    //   500\n    // )\n  }, []);\n\n  let orders = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 16\n  }, this);\n\n  if (!props.loading && props.orders) {\n    console.log(props.orders);\n    orders = /*#__PURE__*/_jsxDEV(Orders, {\n      children: props.orders.map(order => {\n        return /*#__PURE__*/_jsxDEV(OrdersItem, {\n          orderId: order.id,\n          orderProducts: order.products\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!props.loading && props.orders === []) {\n    orders = /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(CartItemList, {\n        children: /*#__PURE__*/_jsxDEV(NoProduct, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            class: \"no-product cart-item\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                fontFamily: 'Lato'\n              },\n              children: \"You haven't placed any orders yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(OrderBoard, {\n    children: orders\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n}; // const mapDispatchToProps = (dispatch) => {\n//   return {\n//     onFetch: (token, userId) => {\n//       dispatch(orderActionTypes.asyncFetchOrdersStart(token, userId));\n//     },\n//   };\n// };\n\n\n_s(Orders, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Orders;\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.orders.orders,\n    loading: state.orders.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps)(Orders); // export default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["React","useEffect","connect","CartItemList","NoProduct","OrderBoard","OrdersItem","Spinner","Wrapper","orderActionTypes","Orders","props","orders","loading","console","log","map","order","id","products","fontFamily","mapStateToProps","state","token","auth","userId"],"sources":["A:/PORTFÃ“LIO/ProjetoNodeShopComRestAPI/front-end-react/src/pages/Orders/Orders.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CartItemList from '../../components/Cart/CartItemList/CartItemList';\r\nimport NoProduct from '../../components/Cart/NoProduct/NoProduct';\r\nimport OrderBoard from '../../components/OrderBoard/OrderBoard';\r\nimport OrdersItem from '../../components/OrderBoard/Orders/OrdersItem/OrdersItem';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport Wrapper from '../../components/Wrapper/Wrapper';\r\n\r\nimport * as orderActionTypes from '../../store/actions/order';\r\n\r\nconst Orders = (props) => {\r\n  useEffect(() => {\r\n    // props.onFetchOrders(props.token, props.userId);\r\n    // console.log(props, 'LINEPROPS');\r\n    // setTimeout(\r\n    //   () => {\r\n    //     props.onFetch(props.token, props.userId);\r\n    //   },\r\n\r\n    //   500\r\n    // )\r\n  }, []);\r\n\r\n  let orders = <Spinner></Spinner>;\r\n\r\n  if (!props.loading && props.orders) {\r\n    console.log(props.orders);\r\n    orders = (\r\n      <Orders>\r\n        {props.orders.map((order) => {\r\n          return (\r\n            <OrdersItem\r\n              orderId={order.id}\r\n              orderProducts={order.products}\r\n            ></OrdersItem>\r\n          );\r\n        })}\r\n      </Orders>\r\n    );\r\n  }\r\n\r\n  if (!props.loading && props.orders === []) {\r\n    orders = (\r\n      <Wrapper>\r\n        <CartItemList>\r\n          <NoProduct>\r\n            <li class=\"no-product cart-item\">\r\n              <h2 style={{ fontFamily: 'Lato' }}>\r\n                You haven't placed any orders yet.\r\n              </h2>\r\n            </li>\r\n          </NoProduct>\r\n        </CartItemList>\r\n      </Wrapper>\r\n    );\r\n  }\r\n\r\n  return <OrderBoard>{orders}</OrderBoard>;\r\n};\r\n\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     onFetch: (token, userId) => {\r\n//       dispatch(orderActionTypes.asyncFetchOrdersStart(token, userId));\r\n//     },\r\n//   };\r\n// };\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.orders.orders,\r\n    loading: state.orders.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Orders);\r\n\r\n// export default Orders;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,iDAAzB;AACA,OAAOC,SAAP,MAAsB,2CAAtB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,UAAP,MAAuB,0DAAvB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AAEA,OAAO,KAAKC,gBAAZ,MAAkC,2BAAlC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;EAAA;;EACxBV,SAAS,CAAC,MAAM,CACd;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;EACD,CAVQ,EAUN,EAVM,CAAT;;EAYA,IAAIW,MAAM,gBAAG,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA,QAAb;;EAEA,IAAI,CAACD,KAAK,CAACE,OAAP,IAAkBF,KAAK,CAACC,MAA5B,EAAoC;IAClCE,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACC,MAAlB;IACAA,MAAM,gBACJ,QAAC,MAAD;MAAA,UACGD,KAAK,CAACC,MAAN,CAAaI,GAAb,CAAkBC,KAAD,IAAW;QAC3B,oBACE,QAAC,UAAD;UACE,OAAO,EAAEA,KAAK,CAACC,EADjB;UAEE,aAAa,EAAED,KAAK,CAACE;QAFvB;UAAA;UAAA;UAAA;QAAA,QADF;MAMD,CAPA;IADH;MAAA;MAAA;MAAA;IAAA,QADF;EAYD;;EAED,IAAI,CAACR,KAAK,CAACE,OAAP,IAAkBF,KAAK,CAACC,MAAN,KAAiB,EAAvC,EAA2C;IACzCA,MAAM,gBACJ,QAAC,OAAD;MAAA,uBACE,QAAC,YAAD;QAAA,uBACE,QAAC,SAAD;UAAA,uBACE;YAAI,KAAK,EAAC,sBAAV;YAAA,uBACE;cAAI,KAAK,EAAE;gBAAEQ,UAAU,EAAE;cAAd,CAAX;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAaD;;EAED,oBAAO,QAAC,UAAD;IAAA,UAAaR;EAAb;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAhDD,C,CAmDA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAzDMF,M;;KAAAA,M;;AA6DN,MAAMW,eAAe,GAAIC,KAAD,IAAW;EACjC,OAAO;IACLV,MAAM,EAAEU,KAAK,CAACV,MAAN,CAAaA,MADhB;IAELC,OAAO,EAAES,KAAK,CAACV,MAAN,CAAaC,OAFjB;IAGLU,KAAK,EAAED,KAAK,CAACE,IAAN,CAAWD,KAHb;IAILE,MAAM,EAAEH,KAAK,CAACE,IAAN,CAAWC;EAJd,CAAP;AAMD,CAPD;;AAWA,eAAevB,OAAO,CAACmB,eAAD,CAAP,CAAyBX,MAAzB,CAAf,C,CAEA"},"metadata":{},"sourceType":"module"}