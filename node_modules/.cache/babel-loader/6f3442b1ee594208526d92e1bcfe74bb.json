{"ast":null,"code":"import * as actionTypes from './orderActionTypes';\nimport axiosOrder from '../../axios-orders';\nexport const fetchOrdersStart = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_START\n  };\n};\nexport const fetchOrdersSuccess = orders => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders\n  };\n};\nexport const fetchOrdersFail = error => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL,\n    error: error\n  };\n};\nexport const asyncFetchOrdersStart = (token, userId) => {\n  return dispatch => {\n    dispatch(fetchOrdersStart); // const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"'; ////sujeito a mudanças...\n\n    axiosOrder.get('/orders' // + \n    // queryParams  ///sujeito a mudanças, firebase\n    ).then(res => {\n      console.log(res.data);\n      const fetchedOrders = [];\n\n      for (let key in res.data) {\n        fetchedOrders.push({ ...res.data[key],\n          id: key\n        });\n      }\n\n      dispatch(fetchOrdersSuccess(fetchedOrders));\n    }).catch(error => {\n      dispatch(fetchOrdersFail(error));\n    });\n  };\n};","map":{"version":3,"names":["actionTypes","axiosOrder","fetchOrdersStart","type","FETCH_ORDERS_START","fetchOrdersSuccess","orders","FETCH_ORDERS_SUCCESS","fetchOrdersFail","error","FETCH_ORDERS_FAIL","asyncFetchOrdersStart","token","userId","dispatch","get","then","res","console","log","data","fetchedOrders","key","push","id","catch"],"sources":["A:/PORTFÓLIO/ProjetoNodeShopComRestAPI/front-end-react/src/store/actions/order.js"],"sourcesContent":["import * as actionTypes from './orderActionTypes';\r\n\r\nimport axiosOrder from '../../axios-orders';\r\n\r\nexport const fetchOrdersStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_START,\r\n  };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n    orders,\r\n  };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const asyncFetchOrdersStart = (token, userId) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchOrdersStart);\r\n\r\n    // const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"'; ////sujeito a mudanças...\r\n\r\n    axiosOrder\r\n      .get('/orders' \r\n      \r\n      // + \r\n      // queryParams  ///sujeito a mudanças, firebase\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data)\r\n        const fetchedOrders = [];\r\n        for (let key in res.data) {\r\n          fetchedOrders.push({\r\n            ...res.data[key],\r\n            id: key,\r\n          });\r\n        }\r\n        dispatch(fetchOrdersSuccess(fetchedOrders));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchOrdersFail(error));\r\n      });\r\n  };\r\n};\r\n"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,oBAA7B;AAEA,OAAOC,UAAP,MAAuB,oBAAvB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;EACpC,OAAO;IACLC,IAAI,EAAEH,WAAW,CAACI;EADb,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,kBAAkB,GAAIC,MAAD,IAAY;EAC5C,OAAO;IACLH,IAAI,EAAEH,WAAW,CAACO,oBADb;IAELD;EAFK,CAAP;AAID,CALM;AAOP,OAAO,MAAME,eAAe,GAAIC,KAAD,IAAW;EACxC,OAAO;IACLN,IAAI,EAAEH,WAAW,CAACU,iBADb;IAELD,KAAK,EAAEA;EAFF,CAAP;AAID,CALM;AAOP,OAAO,MAAME,qBAAqB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACtD,OAAQC,QAAD,IAAc;IACnBA,QAAQ,CAACZ,gBAAD,CAAR,CADmB,CAGnB;;IAEAD,UAAU,CACPc,GADH,CACO,SADP,CAGE;IACA;IAJF,EAMGC,IANH,CAMSC,GAAD,IAAS;MACbC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;MACA,MAAMC,aAAa,GAAG,EAAtB;;MACA,KAAK,IAAIC,GAAT,IAAgBL,GAAG,CAACG,IAApB,EAA0B;QACxBC,aAAa,CAACE,IAAd,CAAmB,EACjB,GAAGN,GAAG,CAACG,IAAJ,CAASE,GAAT,CADc;UAEjBE,EAAE,EAAEF;QAFa,CAAnB;MAID;;MACDR,QAAQ,CAACT,kBAAkB,CAACgB,aAAD,CAAnB,CAAR;IACD,CAhBH,EAiBGI,KAjBH,CAiBUhB,KAAD,IAAW;MAChBK,QAAQ,CAACN,eAAe,CAACC,KAAD,CAAhB,CAAR;IACD,CAnBH;EAoBD,CAzBD;AA0BD,CA3BM"},"metadata":{},"sourceType":"module"}