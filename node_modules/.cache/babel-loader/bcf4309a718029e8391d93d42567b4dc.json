{"ast":null,"code":"var _jsxFileName = \"A:\\\\PORTF\\xD3LIO\\\\ProjetoNodeShopComRestAPI\\\\front-end-react\\\\src\\\\pages\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport { NavLink } from 'react-router-dom';\nimport Input from '../../components/UI/Input/Input';\nimport * as authActionTypes from '../../store/actions/auth';\nimport '../Cart/Cart.css';\nimport './Auth.css';\nimport { connect } from 'react-redux';\nimport { checkValidity, updateObject } from '../../shared/util';\nimport { Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = props => {\n  _s();\n\n  const [isSignup, setIsSignup] = useState(false);\n  const [controls, setControls] = useState({\n    email: {\n      inputType: 'input',\n      elementConfig: {\n        type: 'email',\n        placeholder: 'exemplo@exemplo.com'\n      },\n      value: '',\n      validation: {\n        required: true,\n        isEmail: true\n      },\n      valid: false,\n      touched: false\n    },\n    password: {\n      inputType: 'input',\n      elementConfig: {\n        type: 'password',\n        placeholder: 'exemplo'\n      },\n      value: '',\n      validation: {\n        required: true,\n        minLength: 6\n      },\n      valid: false,\n      touched: false\n    },\n    confirmPassword: {\n      inputType: 'input',\n      elementConfig: {\n        type: 'password',\n        placeholder: 'exemplo'\n      },\n      value: '',\n      validation: {\n        required: true,\n        isEqualToPassword: true\n      },\n      valid: false,\n      touched: false\n    }\n  });\n\n  const authSwitchHandler = () => {\n    setIsSignup(!isSignup);\n  };\n\n  const inputChangedHandler = (event, inputIdentifier) => {\n    const updatedControls = updateObject(controls, {\n      [inputIdentifier]: updateObject(controls[inputIdentifier], {\n        value: event.target.value,\n        valid: checkValidity(event.target.value, controls[inputIdentifier].validation),\n        touched: true\n      })\n    });\n    setControls(updatedControls);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    props.onAuthAttempt(controls.email.value, controls.password.value, controls.confirmPassword.value, isSignup);\n  };\n\n  let errorMessage = false;\n\n  if (props.errorMessage) {\n    errorMessage = props.errorMessage;\n  }\n\n  let controlElementsArray = [];\n\n  for (let key in controls) {\n    controlElementsArray.push({\n      id: key,\n      config: controls[key]\n    });\n  }\n\n  console.log(controlElementsArray);\n\n  if (!isSignup) {\n    controlElementsArray = controlElementsArray.filter(control => {\n      return control.id !== 'confirmPassword';\n    });\n  }\n\n  let form = !props.loading ? controlElementsArray.map(controlElement => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: controlElement.id,\n        children: controlElement.id.charAt(0).toUpperCase() + controlElement.id.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        changed: event => {\n          inputChangedHandler(event, controlElement.id);\n        },\n        elementId: controlElement.id,\n        touched: controlElement.config.touched,\n        invalid: !controlElement.config.valid,\n        shouldValidate: controlElement.config.validation,\n        value: controlElement.value,\n        elementConfig: controlElement.config.elementConfig\n      }, controlElement.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"cart__item-list\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-product\",\n            style: {\n              backgroundColor: 'var(--lightest-green)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"no-product cart-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-message user-message--error\",\n                children: errorMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: formSubmitHandler,\n                children: [form, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"switch-link\",\n                  children: !isSignup ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"No Account? \\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n                      buttonClass: \"command\",\n                      clicked: authSwitchHandler,\n                      buttonType: \"button\",\n                      children: [' ', \"Join NodeShop\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Already have an account? \\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n                      buttonClass: \"command\",\n                      clicked: authSwitchHandler,\n                      buttonType: \"button\",\n                      children: \"Login\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  buttonType: \"button\",\n                  buttonClass: \"button\",\n                  buttonId: \"button\",\n                  children: !isSignup ? 'Login' : 'Signup'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dummy-row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"GUPnTAMbX+dwYU4bBQKtfg3LXNk=\");\n\n_c = Auth;\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuthAttempt: (email, password, isSignup) => {\n      dispatch(authActionTypes.authAttempt(email, password, isSignup));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useEffect","useState","Button","NavLink","Input","authActionTypes","connect","checkValidity","updateObject","Spinner","Auth","props","isSignup","setIsSignup","controls","setControls","email","inputType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","confirmPassword","isEqualToPassword","authSwitchHandler","inputChangedHandler","event","inputIdentifier","updatedControls","target","formSubmitHandler","preventDefault","onAuthAttempt","errorMessage","controlElementsArray","key","push","id","config","console","log","filter","control","form","loading","map","controlElement","charAt","toUpperCase","slice","backgroundColor","mapStateToProps","state","auth","error","token","mapDispatchToProps","dispatch","authAttempt"],"sources":["A:/PORTFÃ“LIO/ProjetoNodeShopComRestAPI/front-end-react/src/pages/Auth/Auth.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport Button from '../../components/UI/Button/Button';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Input from '../../components/UI/Input/Input';\r\n\r\nimport * as authActionTypes from '../../store/actions/auth';\r\n\r\nimport '../Cart/Cart.css';\r\nimport './Auth.css';\r\nimport { connect } from 'react-redux';\r\nimport { checkValidity, updateObject } from '../../shared/util';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Auth = (props) => {\r\n  const [isSignup, setIsSignup] = useState(false);\r\n\r\n  const [controls, setControls] = useState({\r\n    email: {\r\n      inputType: 'input',\r\n      elementConfig: {\r\n        type: 'email',\r\n        placeholder: 'exemplo@exemplo.com',\r\n      },\r\n      value: '',\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n\r\n    password: {\r\n      inputType: 'input',\r\n      elementConfig: {\r\n        type: 'password',\r\n        placeholder: 'exemplo',\r\n      },\r\n      value: '',\r\n      validation: {\r\n        required: true,\r\n        minLength: 6,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    confirmPassword: {\r\n      inputType: 'input',\r\n      elementConfig: {\r\n        type: 'password',\r\n        placeholder: 'exemplo',\r\n      },\r\n      value: '',\r\n      validation: {\r\n        required: true,\r\n        isEqualToPassword: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  });\r\n\r\n  const authSwitchHandler = () => {\r\n    setIsSignup(!isSignup);\r\n  };\r\n\r\n  const inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedControls = updateObject(controls, {\r\n      [inputIdentifier]: updateObject(controls[inputIdentifier], {\r\n        value: event.target.value,\r\n        valid: checkValidity(\r\n          event.target.value,\r\n          controls[inputIdentifier].validation\r\n        ),\r\n        touched: true,\r\n      }),\r\n    });\r\n\r\n    setControls(updatedControls);\r\n  };\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    props.onAuthAttempt(\r\n      controls.email.value,\r\n      controls.password.value,\r\n      controls.confirmPassword.value,\r\n      isSignup\r\n    );\r\n  };\r\n\r\n  let errorMessage = false;\r\n\r\n  if (props.errorMessage) {\r\n    errorMessage = props.errorMessage;\r\n  }\r\n\r\n  let controlElementsArray = [];\r\n\r\n  for (let key in controls) {\r\n    controlElementsArray.push({\r\n      id: key,\r\n      config: controls[key],\r\n    });\r\n  }\r\n\r\n  console.log(controlElementsArray);\r\n\r\n  if (!isSignup) {\r\n    controlElementsArray = controlElementsArray.filter((control) => {\r\n      return control.id !== 'confirmPassword';\r\n    });\r\n  }\r\n\r\n  let form = !props.loading ? (\r\n    controlElementsArray.map((controlElement) => {\r\n      return (\r\n        <div class=\"control\">\r\n          <label htmlFor={controlElement.id}>\r\n            {controlElement.id.charAt(0).toUpperCase() +\r\n              controlElement.id.slice(1)}\r\n          </label>\r\n          <Input\r\n            changed={(event) => {\r\n              inputChangedHandler(event, controlElement.id);\r\n            }}\r\n            key={controlElement.id}\r\n            elementId={controlElement.id}\r\n            touched={controlElement.config.touched}\r\n            invalid={!controlElement.config.valid}\r\n            shouldValidate={controlElement.config.validation}\r\n            value={controlElement.value}\r\n            elementConfig={controlElement.config.elementConfig}\r\n          />\r\n        </div>\r\n      );\r\n    })\r\n  ) : (\r\n    <Spinner></Spinner>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"cart\">\r\n        <div className=\"wrapper\">\r\n          <ul className=\"cart__item-list\">\r\n            <div\r\n              className=\"no-product\"\r\n              style={{ backgroundColor: 'var(--lightest-green)' }}\r\n            >\r\n              <li className=\"no-product cart-item\">\r\n                <div className=\"user-message user-message--error\">\r\n                  {errorMessage}\r\n                </div>\r\n\r\n                <form onSubmit={formSubmitHandler}>\r\n                  {/* <Input\r\n                    inputType={'hidden'}\r\n                    inputName={'_csrf'}\r\n                    inputId=\"csrf\"\r\n                    inputPlaceholder=\"csrf\"\r\n                    inputClassName=\"hidden\"\r\n                  ></Input>\r\n                  <div className=\"control\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n\r\n                    <Input\r\n                      inputPlaceholder=\"exemplo@exemplo\"\r\n                      inputType=\"email\"\r\n                      inputId=\"email\"\r\n                      inputName=\"email\"\r\n                      inputClassName=\"email\"\r\n                    ></Input>\r\n                  </div>\r\n                  <div className=\"control\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <Input\r\n                      inputPlaceholder=\"exemplo\"\r\n                      inputType=\"password\"\r\n                      inputId=\"password\"\r\n                      inputName=\"password\"\r\n                      inputClassName=\"password\"\r\n                    ></Input>\r\n                  </div> */}\r\n                  {form}\r\n                  <div className=\"switch-link\">\r\n                    {!isSignup ? (\r\n                      <p>\r\n                        No Account? &nbsp;\r\n                        <Button\r\n                          buttonClass=\"command\"\r\n                          clicked={authSwitchHandler}\r\n                          buttonType=\"button\"\r\n                        >\r\n                          {' '}\r\n                          Join NodeShop\r\n                        </Button>\r\n                      </p>\r\n                    ) : (\r\n                      <p>\r\n                        Already have an account? &nbsp;\r\n                        <Button\r\n                          buttonClass=\"command\"\r\n                          clicked={authSwitchHandler}\r\n                          buttonType=\"button\"\r\n                        >\r\n                          Login\r\n                        </Button>\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                  <Button\r\n                    buttonType=\"button\"\r\n                    buttonClass=\"button\"\r\n                    buttonId=\"button\"\r\n                  >\r\n                    {!isSignup ? 'Login' : 'Signup'}\r\n                  </Button>\r\n                </form>\r\n              </li>\r\n            </div>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"dummy-row\"></div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    token: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuthAttempt: (email, password, isSignup) => {\r\n      dispatch(authActionTypes.authAttempt(email, password, isSignup));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}