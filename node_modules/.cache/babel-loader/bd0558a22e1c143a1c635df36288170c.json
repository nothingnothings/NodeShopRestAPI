{"ast":null,"code":"import * as authActionTypes from './authActionTypes';\nimport axiosOrder from '../../axios-orders';\nexport const authStart = () => {\n  return {\n    type: authActionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId, email) => {\n  return {\n    type: authActionTypes.AUTH_SUCCESS,\n    token: token,\n    userId: userId,\n    email: email\n  };\n};\nexport const authFail = error => {\n  return {\n    type: authActionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const authLogout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('email');\n  localStorage.removeItem('userId');\n  return {\n    type: authActionTypes.AUTH_LOGOUT\n  };\n}; // const checkAuthTimeout = (expirationTime) => {\n//   return (dispatch) => {\n//     setTimeout(() => {\n//       dispatch(authLogout());\n//     }, expirationTime * 1000);\n//   };\n// };\n\nexport const authAttempt = function (email, password) {\n  let confirmPassword = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let isSignup = arguments.length > 3 ? arguments[3] : undefined;\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password // returnSecureToken: true     ////optional value (FIREBASE)\n\n    };\n    let url = '/signup';\n\n    if (!isSignup) {\n      url = '/login';\n    }\n\n    axiosOrder.post(url, authData).then(response => {\n      console.log('entered');\n      console.log(response.data);\n      const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('userId', response.data.userId);\n      localStorage.setItem('email', response.data.email);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(response.data.token, response.data.userId, response.data.email));\n      dispatch(checkAuthTimeout(response.data.expiresIn));\n    }).catch(error => {\n      dispatch(authFail(error.response.data.error));\n    });\n  };\n};\nexport const checkAuthState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      dispatch(authLogout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(authLogout());\n      } else {\n        const userId = localStorage.getItem('userId');\n        const email = localStorage.getItem('email');\n        dispatch(authSuccess(token, userId, email));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"names":["authActionTypes","axiosOrder","authStart","type","AUTH_START","authSuccess","token","userId","email","AUTH_SUCCESS","authFail","error","AUTH_FAIL","authLogout","localStorage","removeItem","AUTH_LOGOUT","authAttempt","password","confirmPassword","isSignup","dispatch","authData","url","post","then","response","console","log","data","expirationDate","Date","getTime","expiresIn","setItem","checkAuthTimeout","catch","checkAuthState","getItem"],"sources":["A:/PORTFÃ“LIO/ProjetoNodeShopComRestAPI/front-end-react/src/store/actions/auth.js"],"sourcesContent":["import * as authActionTypes from './authActionTypes';\r\n\r\n\r\nimport axiosOrder from '../../axios-orders';\r\n\r\n\r\nexport const authStart = () => {\r\n    return {\r\n      type: authActionTypes.AUTH_START,\r\n    };\r\n  };\r\n  \r\n  export const authSuccess = (token, userId, email) => {\r\n    return {\r\n      type: authActionTypes.AUTH_SUCCESS,\r\n      token: token,\r\n      userId: userId,\r\n      email: email,\r\n    };\r\n  };\r\n  \r\n  export const authFail = (error) => {\r\n    return {\r\n      type: authActionTypes.AUTH_FAIL,\r\n      error: error,\r\n    };\r\n  };\r\n  \r\n  export const authLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('email');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n      type: authActionTypes.AUTH_LOGOUT,\r\n    };\r\n  };\r\n\r\n\r\n\r\n  \r\n\r\n// const checkAuthTimeout = (expirationTime) => {\r\n//   return (dispatch) => {\r\n//     setTimeout(() => {\r\n//       dispatch(authLogout());\r\n//     }, expirationTime * 1000);\r\n//   };\r\n// };\r\n\r\nexport const authAttempt = (email, password, confirmPassword=null, isSignup) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n\r\n\r\n\r\n\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      // returnSecureToken: true     ////optional value (FIREBASE)\r\n    };\r\n\r\n    let url = '/signup';\r\n\r\n    if (!isSignup) {\r\n      url = '/login';\r\n    }\r\n\r\n    axiosOrder\r\n      .post(url, authData)\r\n      .then((response) => {\r\n\r\n        console.log('entered');\r\n        console.log(response.data);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n        localStorage.setItem('token', response.data.token);\r\n        localStorage.setItem('userId', response.data.userId);\r\n        localStorage.setItem('email', response.data.email);\r\n        localStorage.setItem('expirationDate', expirationDate);\r\n        dispatch(\r\n          authSuccess(\r\n            response.data.token,\r\n            response.data.userId,\r\n            response.data.email\r\n          )\r\n        );\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const checkAuthState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      dispatch(authLogout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(authLogout());\r\n      } else {\r\n        const userId = localStorage.getItem('userId');\r\n        const email = localStorage.getItem('email');\r\n        dispatch(authSuccess(token, userId, email));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}