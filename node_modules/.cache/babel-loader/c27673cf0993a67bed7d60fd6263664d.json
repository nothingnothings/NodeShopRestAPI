{"ast":null,"code":"import * as shopActionTypes from '../actions/shopActionTypes';\nimport axiosOrder from '../../axios-orders';\nexport const fetchProductsStart = () => {\n  return {\n    type: shopActionTypes.FETCH_PRODUCTS_START\n  };\n};\nexport const fetchProductsSuccess = (products, pageNumber) => {\n  return {\n    type: shopActionTypes.FETCH_PRODUCTS_SUCCESS,\n    products,\n    pageNumber: pageNumber\n  };\n};\nexport const fetchProductsFail = error => {\n  return {\n    type: shopActionTypes.FETCH_PRODUCTS_FAIL,\n    error: error\n  };\n};\nexport const asyncFetchProductsStart = (pageNumber, direction) => {\n  return dispatch => {\n    dispatch(fetchProductsStart()); // const queryParams =\n    //   '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"'; ////sujeito a mudanças...\n\n    console.log(pageNumber, direction);\n    let page = pageNumber;\n\n    if (direction === 'next') {\n      console.log('entered');\n      page++;\n    }\n\n    if (direction === 'previous') {\n      page--;\n    }\n\n    axiosOrder({\n      method: 'GET',\n      url: `/shop/?page=${page}`\n    }).then(res => {\n      console.log(res);\n      const fetchedProducts = [];\n\n      for (let key in res.data) {\n        fetchedProducts.push({ ...res.data[key],\n          id: key,\n          value: res.data[key]\n        });\n      }\n\n      console.log(fetchedProducts);\n      dispatch(fetchProductsSuccess(fetchedProducts, page));\n    }).catch(error => {\n      if (error.response) {\n        console.log(error.toJSON());\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      }\n\n      dispatch(fetchProductsFail(error));\n    });\n  };\n};","map":{"version":3,"names":["shopActionTypes","axiosOrder","fetchProductsStart","type","FETCH_PRODUCTS_START","fetchProductsSuccess","products","pageNumber","FETCH_PRODUCTS_SUCCESS","fetchProductsFail","error","FETCH_PRODUCTS_FAIL","asyncFetchProductsStart","direction","dispatch","console","log","page","method","url","then","res","fetchedProducts","key","data","push","id","value","catch","response","toJSON","status","headers"],"sources":["A:/PORTFÓLIO/ProjetoNodeShopComRestAPI/front-end-react/src/store/actions/shop.js"],"sourcesContent":["import * as shopActionTypes from '../actions/shopActionTypes';\r\n\r\nimport axiosOrder from '../../axios-orders';\r\n\r\nexport const fetchProductsStart = () => {\r\n  return {\r\n    type: shopActionTypes.FETCH_PRODUCTS_START,\r\n  };\r\n};\r\n\r\nexport const fetchProductsSuccess = (products, pageNumber) => {\r\n  return {\r\n    type: shopActionTypes.FETCH_PRODUCTS_SUCCESS,\r\n    products,\r\n    pageNumber: pageNumber\r\n    \r\n  };\r\n};\r\n\r\nexport const fetchProductsFail = (error) => {\r\n  return {\r\n    type: shopActionTypes.FETCH_PRODUCTS_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\n\r\nexport const asyncFetchProductsStart = (pageNumber, direction) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchProductsStart());\r\n\r\n    // const queryParams =\r\n    //   '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"'; ////sujeito a mudanças...\r\n\r\n    console.log(pageNumber, direction);\r\n\r\n\r\n    let page = pageNumber;\r\n\r\n   \r\n\r\n    if (direction === 'next') {\r\n      console.log('entered');\r\n      page++;\r\n    }\r\n\r\n\r\n    if (direction === 'previous') {\r\n      page --;\r\n    }\r\n\r\n\r\n    axiosOrder(\r\n        {\r\n            method: 'GET',\r\n            url: `/shop/?page=${page}`\r\n        }\r\n    )\r\n      .then((res) => {\r\n        console.log(res);\r\n        const fetchedProducts = [];\r\n        for (let key in res.data) {\r\n          fetchedProducts.push({\r\n            ...res.data[key],\r\n            id: key,\r\n            value: res.data[key]\r\n          });\r\n        }\r\n        console.log(fetchedProducts);\r\n        dispatch(fetchProductsSuccess(fetchedProducts, page));\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          console.log(error.toJSON())\r\n            console.log(error.response.data);\r\n            console.log(error.response.status);\r\n            console.log(error.response.headers);\r\n        }\r\n        dispatch(fetchProductsFail(error));\r\n      });\r\n  };\r\n};\r\n"],"mappings":"AAAA,OAAO,KAAKA,eAAZ,MAAiC,4BAAjC;AAEA,OAAOC,UAAP,MAAuB,oBAAvB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;EACtC,OAAO;IACLC,IAAI,EAAEH,eAAe,CAACI;EADjB,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,oBAAoB,GAAG,CAACC,QAAD,EAAWC,UAAX,KAA0B;EAC5D,OAAO;IACLJ,IAAI,EAAEH,eAAe,CAACQ,sBADjB;IAELF,QAFK;IAGLC,UAAU,EAAEA;EAHP,CAAP;AAMD,CAPM;AASP,OAAO,MAAME,iBAAiB,GAAIC,KAAD,IAAW;EAC1C,OAAO;IACLP,IAAI,EAAEH,eAAe,CAACW,mBADjB;IAELD,KAAK,EAAEA;EAFF,CAAP;AAID,CALM;AAQP,OAAO,MAAME,uBAAuB,GAAG,CAACL,UAAD,EAAaM,SAAb,KAA2B;EAChE,OAAQC,QAAD,IAAc;IACnBA,QAAQ,CAACZ,kBAAkB,EAAnB,CAAR,CADmB,CAGnB;IACA;;IAEAa,OAAO,CAACC,GAAR,CAAYT,UAAZ,EAAwBM,SAAxB;IAGA,IAAII,IAAI,GAAGV,UAAX;;IAIA,IAAIM,SAAS,KAAK,MAAlB,EAA0B;MACxBE,OAAO,CAACC,GAAR,CAAY,SAAZ;MACAC,IAAI;IACL;;IAGD,IAAIJ,SAAS,KAAK,UAAlB,EAA8B;MAC5BI,IAAI;IACL;;IAGDhB,UAAU,CACN;MACIiB,MAAM,EAAE,KADZ;MAEIC,GAAG,EAAG,eAAcF,IAAK;IAF7B,CADM,CAAV,CAMGG,IANH,CAMSC,GAAD,IAAS;MACbN,OAAO,CAACC,GAAR,CAAYK,GAAZ;MACA,MAAMC,eAAe,GAAG,EAAxB;;MACA,KAAK,IAAIC,GAAT,IAAgBF,GAAG,CAACG,IAApB,EAA0B;QACxBF,eAAe,CAACG,IAAhB,CAAqB,EACnB,GAAGJ,GAAG,CAACG,IAAJ,CAASD,GAAT,CADgB;UAEnBG,EAAE,EAAEH,GAFe;UAGnBI,KAAK,EAAEN,GAAG,CAACG,IAAJ,CAASD,GAAT;QAHY,CAArB;MAKD;;MACDR,OAAO,CAACC,GAAR,CAAYM,eAAZ;MACAR,QAAQ,CAACT,oBAAoB,CAACiB,eAAD,EAAkBL,IAAlB,CAArB,CAAR;IACD,CAlBH,EAmBGW,KAnBH,CAmBUlB,KAAD,IAAW;MAChB,IAAIA,KAAK,CAACmB,QAAV,EAAoB;QAClBd,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACoB,MAAN,EAAZ;QACEf,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACmB,QAAN,CAAeL,IAA3B;QACAT,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACmB,QAAN,CAAeE,MAA3B;QACAhB,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACmB,QAAN,CAAeG,OAA3B;MACH;;MACDlB,QAAQ,CAACL,iBAAiB,CAACC,KAAD,CAAlB,CAAR;IACD,CA3BH;EA4BD,CApDD;AAqDD,CAtDM"},"metadata":{},"sourceType":"module"}